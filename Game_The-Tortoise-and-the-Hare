#Game made by © EunJung(Jennie)Yang & Tzuyi Lee. Sep 2022
#Game Name: The Tortoise and the Hare (The turtle and rabbit).
#Game Stroy: Do you know the story of a rabbit and a turtle, right? Did the turtle really win the race against the rabbit? Let's check it out!
#Game Rule: If you score more than 4 points in 3 games, you can win the race! (If you see the flag at the finish line... haha it's totally up to you!)

# Declarations and variables we need.
from imp import PY_COMPILED
from importlib import import_module
import random
from sre_constants import JUMP # Random numbers
import sys
from unittest import result
from xml.sax.saxutils import prepare_input_source # System stuff for exiting

# define everything here
player = { 
    "name": "p1", 
    "score": 0,
    "items" : ["milk"],
    "friends" : [],
    "location" : "start"
}

score_T2 = 0
score_R2 = 0

def printGraphic(name):
    if (name == "Storytitle"):
         print("___________.__             ___________            __         .__                                   .___   __  .__               ___ ___")                       
         print("\__    ___/|  |__   ____   \__    ___/___________/  |_  ____ |__| ______ ____   _____    ____    __| _/ _/  |_|  |__   ____    /   |   \_____ _______   ____") 
         print("  |    |   |  |  \_/ __ \    |    | /  _ \_  __ \   __\/  _ \|  |/  ___// __ \  \__  \  /    \  / __ |  \   __\  |  \_/ __ \  /    ~    \__  \\_  __ \_/ __ \ ")
         print("  |    |   |   Y  \  ___/    |    |(  <_> )  | \/|  | (  <_> )  |\___ \\  ___/   / __ \|   |  \/ /_/ |   |  | |   Y  \  ___/  \    Y    // __ \|  | \/\  ___/") 
         print("  |____|   |___|  /\___  >   |____| \____/|__|   |__|  \____/|__/____  >\___  > (____  /___|  /\____ |   |__| |___|  /\___  >  \___|_  /(____  /__|    \___  >")
         print("                \/     \/                                            \/     \/       \/     \/      \/             \/     \/         \/      \/            \/") 

    if (name == "Turtle"):
         print ("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
         print ("░░░░░░░░░░░░░░░░░░░░██████░░░░░░░░░")
         print ("░░░░░░░░░░░░░░░░░░░█░░░░░░█░░░░░░░░")
         print ("░░░░█████░░░░░░░░░█░░░░░░░░█░░░░░░░")
         print ("░░░█░░░░░█░░░░░░░█░░░░░░░░░░█░░░░░░")
         print ("░░█░░░░░░░█░░░░░█░░░░░░░░░░░░█░░░░░")
         print ("░█░░░█░░░░░█░░░█░░░░░░░░░░░░░░█░░░░")
         print ("░█░░░░░░░░░░█░█░░░░░░░░░░░░░░░░█░░░")
         print ("░░█░░░░░░░░░░████████████████████░░")
         print ("░░░██████░░░░░░░░░░░░░░░░░░░░░░░██░")
         print ("░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░██░░░")
         print ("░░░░░░░░░░█████░░░█████████░░█░░░░░")
         print ("░░░░░░░░░░░░░░░█░░█░░░░░░░█░░█░░░░░")
         print ("░░░░░░░░░░░░░░░█░░█░░░░░░░█░░█░░░░░")
         print ("░░░░░░░░░░░░░░░█░░█░░░░░░░█░░█░░░░░")
         print ("░░░░░░░░░░░░░░█░░░█░░░░░░█░░░█░░░░░")
         print ("░░░░░░░░░░░░░█░░░░█░░░░░█░░░░█░░░░░")
         print ("░░░░░░░░░░░░███████░░░░███████░░░░░")
         print ("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
    
    if (name == "Rabbit"):
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░███░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░█░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░░░████░░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░░█░░░█░░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░█░░░░░█░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░█░░░░░█░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░█░░░░░█░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░█░░░░░█░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░░█░░░█░░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░█████░░░░░░░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░█░░░░░░░░░░░░█░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░█░░░░░░░░░░░░█░░░░░░░░░░░░░░")
        print("░░░░░░░░░░░█░░░░█░░░░░░░░█░░░░░░░░░░░░░░")
        print("░░░░░░░░░░█░░░░░░░░░░░░░░░█░░░░░░░░░░░░░")
        print("░░░░░░░░░░█░░░░░░░░░░░░░░░█░░░░░░░░░░░░░")
        print("░░░░░░░░░░░███░░░░░░░░░░███░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░███░░░░░███░░░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░█░░░░█░░░░░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░░█░░░░░░███████░░░░░░░░░░")
        print("░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░")
        print("░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░█░░░░░░░░")
        print("░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░█░░░░░░░")
        print("░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░█░░░░░░░")
        print("░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░░█░░░░░░░")
        print("░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░████░░░░")
        print("░░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░░█░░░█░░░")
        print("░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░░░█░░░█░░░")
        print("░░░░░░░░░███████████████████████░███░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")

    if (name == "Bear"):
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░███░░░░░░░░░███░░░░░░░░░░░░")
        print("░░░░░░░░░░░█░░░█░░░░░░░█░░░█░░░░░░░░░░░")
        print("░░░░░░░░░░░█░░░░█░░░░░█░░░░█░░░░░░░░░░░")
        print("░░░░░░░░░░░░██░░░█████░░░██░░░░░░░░░░░░")
        print("░░░░░░░░░░░█░░░░░░░░░░░░░░░█░░░░░░░░░░░")
        print("░░░░░░░░░░█░░░░░░░░░░░░░░░░░█░░░░░░░░░░")
        print("░░░░░░░░░█░░░░░█░░░░░░░█░░░░░█░░░░░░░░░")
        print("░░░░░░░░░█░░░░░░░░███░░░░░░░░█░░░░░░░░░")
        print("░░░░░░░░░█░░░░░░░░░█░░░░░░░░░█░░░░░░░░░")
        print("░░░░░░░░░░█░░░░░░░█░█░░░░░░░█░░░░░░░░░░")
        print("░░░░░░░░░░░█░░░░░░░░░░░░░░░█░░░░░░░░░░░")
        print("░░░░░░░░░░░░█░░░░░░░░░░░░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░░░█████████████░░░░░░░░░░░░░")
        print("░░░░░░░░░░░░█░░░░░░░░░░░░░█░░░░░░░░░░░░")
        print("░░░░░░░░░░░█░░░░░░░░░░░░░░░█░░░░░░░░░░░")
        print("░░░░░░░░░░█░░░░░░░░░░░░░░░░░█░░░░░░░░░░")
        print("░░░░░░░░░█░░░░░░░░░░░░░░░░░░░█░░░░░░░░░")
        print("░░░░░░░██░░░░░░████████░░░░░░░██░░░░░░░")
        print("░░░░░░█░░░░░░░█░░░░░░░░█░░░░░░░░█░░░░░░")
        print("░░░░░░█░░░░░░█░░░░░░░░░░█░░░░░░░█░░░░░░")
        print("░░░░░█░░░░░░█░░░░░░░░░░░░█░░░░░░░█░░░░░")
        print("░░░░░█░░░░░█░░░░░░░░░░░░░░█░░░░░░█░░░░░")
        print("░░░░░█░░░░░█░░░░░░░░░░░░░░█░░░░░░█░░░░░")
        print("░░░░░█░░░░░█░░░░░░░░░░░░░░█░░░░░░█░░░░░")
        print("░░░░░█████████████████████████████░░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")


    if (name == "TurtleWin"):
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░██░░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░████░░░░░░░░░░░░░░░░░░░░░░███░░░░░░░")
        print("░░██░░░░░░░░░░████░░░░░░░░░█░░░█░░░░░░")
        print("░░██░░░░░░░░░█░░░░█░░░░░░░█░░░░░█░░░░░")
        print("░░██░░░░░░░░█░░░░░░█░░░░░█░░░░░░░█░░░░")
        print("░░██░░░░░░░█░░█░░░░░█░░░█░░░░░░░░░█░░░")
        print("░░██░░░░░░█░░░░░░░░░░█░█░░░░░░░░░░░█░░")
        print("░░██░░░░░░█░░░░░░░░░░███████████████░░")
        print("░░██░░░░░░░█░░░░░░░░░░░░░░░░░░░░░░░██░")
        print("░░██░░░░░░░░█████░░░░░░░░░░░░░░░░░██░░")
        print("░░██░░░░░░░░░░░░░█░░░░░░░░░░░░░███░░░░")
        print("░░██░░░░░░░░░░░░░░███░██████░███░░░░░░")
        print("░░██░░░░░░░░░░░░░░░░█░█░░░░█░█░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░░░█░█░░░░█░█░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░░█░░█░░░█░░█░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░█░░░█░░█░░░█░░░░░░░░")
        print("░░██░░░░░░░░░░░░░█░░░░█░█░░░░█░░░░░░░░")
        print("░░██░░░░░░░░░░░░░██████░██████░░░░░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")


    if (name == "RabbitWin"):
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░████░░░░░░░░░░░░░░░░░░░░██░░░░░░░░")
        print("░░██░░██░░░░░░░░░░░░░░░░░░█░█░░░░░░░")
        print("░░██░░░██░░░░░░░░░░░░░░███░░█░░░░░░░")
        print("░░██░░░░██░░░░░░░░░░░░█░░█░░█░░░░░░░")
        print("░░██░░░░░██░░░░░░░░░░█░░░░█░█░░░░░░░")
        print("░░██░░░░██░░░░░░░░░░░█░░░░█░█░░░░░░░")
        print("░░██░░░██░░░░░░░░░░░░█░░░░█░█░░░░░░░")
        print("░░██░░██░░░░░░░░░░░░░█░░░░█░█░░░░░░░")
        print("░░████░░░░░░░░░░░░░░░░█░░█░░█░░░░░░░")
        print("░░██░░░░░░░░░░░░░░░███░░░░░░█░░░░░░░")
        print("░░██░░░░░░░░░░░░░░█░░░░░░░░░█░░░░░░░")
        print("░░██░░░░░░░░░░░░░█░░░░░░░░░░█░░░░░░░")
        print("░░██░░░░░░░░░░░░█░░░█░░░░░░░█░░░░░░░")
        print("░░██░░░░░░░░░░░█░░░░░░░░░░░░░█░░░░░░")
        print("░░██░░░░░░░░░░░█░░░░░░░░░░░░░█░░░░░░")
        print("░░██░░░░░░░░░░░░██░░░░░░░░░░██░░░░░░")
        print("░░██░░░░░░░░░░░░░░██░░░░░░██░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░░░█░░░░█░░░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░░█░░░░░░█░░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░█░░░░░░░░█░░░░░░░░")
        print("░░██░░░░░░░░░░░░░░█░░░░░░░░░█░███░░░")
        print("░░██░░░░░░░░░░░░░█░░░░░░░░░░░██░░█░░")
        print("░░██░░░░░░░░░░░░█░░░░░░░░░░░░░█░░█░░")
        print("░░██░░░░░░░░░░░█░░░░░░░░░░░░░░░██░░░")
        print("░░██░░░░░░░░░░██████████████████░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░")

        
    if (name == "RiverStones"):
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░░░█████░░░░░░░░░█████░░░░")
        print("░░░█░░░░░█░░░░░░░█░░░░░█░░░")
        print("░░█░░░░░░░█░░░░░█░░░░░░░█░░")
        print("░█░░░░░░░░░█░░░█░░░░░░░░░█░")
        print("░░█░░░░░░░█░░░░░█░░░░░░░█░░")
        print("░░░█░░░░░█░░░░░░░█░░░░░█░░░")
        print("░░░░█████░░░░░░░░░█████░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░")
        print("░░░░█████░░░░░░░░░█████░░░░")
        print("░░░█░░░░░█░░░░░░░█░░░░░█░░░")
        print("░░█░░░░░░░█░░░░░█░░░░░░░█░░")
        print("░█░░░░░░░░░█░░░█░░░░░░░░░█░")
        print("░░█░░░░░░░█░░░░░█░░░░░░░█░░")
        print("░░░█░░░░░█░░░░░░░█░░░░░█░░░")
        print("░░░░█████░░░░░░░░░█████░░░░")
        print("░░░░░░░░░░░░░░░░░░░░░░░░░░░")




# # Ends for turtle: if user win over 3 point -> Win
# def gameOver_T(score_T3):
#         print ("Now you run as fast as you can with your whole power")
#         print ("Would you win the race?")
#         if (score_T3 >= 5):
#             printGraphic("TurtleWin")
#             print ("Congrate! You win!")

#         else:
#             print ("Oh, I'm sorry. You lose the race.")



# Turtle Game over: If user win 4 score or above in total, they win.
def gameWinner(score_T3):
        if (score_T3 >= 3):
             # printGraphic("TurtleWin")
            printGraphic("TurtleWin")
            print("Congrate! You win!")

        else:
            printGraphic("RabbitWin")
            print("Oh, I'm sorry. You lose the race. Try again.")
        
# Rabbit Game over: If user win 4 score or above in total, they win.
def gameOver_R(score_R3):
        if (score_R3 >= 3):
            # printGraphic("RabbitWin")
            printGraphic("RabbitWin")
            print ("Congrate! You win!")

        else:
            printGraphic("TurtleWin")
            print ("Oh, I'm sorry. You lose the race. Try again.")



def jumpRock(minNum, maxNum, difficulty):
    result = random.randint(minNum, maxNum)
    print ("You choose the rock #" + str(result) + " from " + str(maxNum))

    if (result <= difficulty):
        print ("Oh no, you fall down into the water.")
        print ("You need to climp up the river bank and try again...")
        input("press enter >")

        jumpRock(minNum, maxNum, difficulty) #this is for requring the jumping choice

    return result



# Game3 for turtle: choose one food to finish the game
def Game3_T():
    print ("You are almost reach the finish line, but you are too exhausted to move even a step.")
    print ("Choose a food to eat. Which do you want to eat?")
    print ("🥦Vegetable, 🥔Sweet Potato or 🌽Corn")

    pcmd = input ("Which food would you eat?")

    if (pcmd == "Vegetable"):
        print ("Though you're till a bit hungry, there is no time!")
        score_T3 = score_T2 + 2
        print (score_T3)
        input ("press enter >")

        print ("The finish line is in front of you.")
        print ("Would you win the race?")
        input ("press enter >")

        gameWinner(score_T3)


    elif (pcmd == "Sweet Potato"):
        print("It tastes... too dry... However, the time is going up.")
        score_T3 = score_T2 + 1
        print (score_T3)
        input ("press enter >")

        print ("The finish line is in front of you.")
        print ("Would you win the race?")
        input ("press enter >")

        gameWinner(score_T3)

    elif (pcmd == "Corn"):
        print("Smart, it's the best food to you to recover! ")
        print("Now, you feel you can run even faster then before.")
        score_T3 = score_T2 + 3
        print (score_T3)
        input ("press enter >")

        print ("The finish line is in front of you.")
        print ("Would you win the race?")
        input ("press enter >")

        gameWinner (score_T3)
        
    else:
        print ("You don't have this. Pick another food.")
        Game3_T()  # Try again

    return


    
# Game3 for rabbit: choose one food to finish the game
def Game3_R():
    print ("You are almost reach the finish line, but you are too exhausted to move even a step.")
    print ("Choose a food to eat. Which do you want to eat?")
    print ("🥦Vegetable, 🥔Sweet Potato or 🌽Corn")

    pcmd = input ("Which food would you eat?: ")

    if (pcmd == "Vegetable"):
        print ("Though you're till a bit hungry, there is no time!")
        score_R3 = score_R2 + 1
        print (score_Ｒ3)
        input("press enter >")
        
        print ("The finish line is in front of you.")
        print ("Would you win the race?")
        input ("press enter >")

        gameOver_R(score_R3)


    elif (pcmd == "Sweet Potato"):
        print("Smart, it's the best food to you to recover!")
        print("Now, you feel you can run even faster then before.")
        score_R3 = score_R2 + 2
        print (score_Ｒ3)
        input("press enter >")

        print ("The finish line is in front of you.")
        print ("Would you win the race?")
        input ("press enter >")

        gameOver_R(score_R3)

    elif (pcmd == "Corn"):
        print("It tastes... too tough... However, the time is going up.")
        score_R3 = score_R2 + 0
        print (score_Ｒ3)
        input("press enter >")

        print ("The finish line is in front of you.")
        print ("Would you win the race?")
        input ("press enter >")

        gameOver_R(score_R3)
        
    else:
        print ("You don't have this. Pick another food.")
        Game3_R() # Try again

    return



# Game2 for Turtle: Rock-paper-scissors  
def Game2_T():
    printGraphic("Bear")
    print("While you're on your way, the bear silhouette looks blurry.")
    print("The bear is approaching you...")
    print("Let's play 'Rock Paper Scissors' to beat the bear.")
    input("If you want to play the game, please press enter > ")
    play_T()

#Scissors=0, Rock=1, Paper=2    
possible_choices = ["Scissors", "Rock", "Paper"]
result_message = ["Tie","Win","Lose"]

#Scissors=0, Rock=1, Paper=2, Another input= -1
def get_user_choice_T():
    s = input("Rock Paper Scissors!: ")
    if s in possible_choices:
        return possible_choices.index(s)
        return -1

#Scissors=0, Rock=1, Paper=2        
def get_computer_choice():
    return random.randint(0, 2)  

#Tie=0, Win=1, Lose=2
def check_win_T(me : int, opponent : int) :
    if me == opponent:
        return 0
    elif (me + 1) % 3 == opponent:
        return 2 
    else :
        return 1

#Play Rock-paper-scissors        
def play_T():
    user = get_user_choice_T()
    if user == -1:
        print("Please write only Rock, Paper, Scissors.")
        return

    com = get_computer_choice()

    result = check_win_T(user, com)

    print(f'You : {possible_choices[user]} vs {possible_choices[com]} : com')
    print(result_message[result])
    
    if (result == 1):
        score_T2 = 0
        score_T2 += 3
        print(score_T2)
        input ("press enter >")
        
        Game3_T() # Start the Game3_T

    elif (result == 2):
        score_T2 = 0
        score_T2 += 1
        print(score_T2)
        input ("press enter >")

        Game3_T() # Start the Game3_T

    else:
        score_T2 = 0
        score_T2 += 2
        print (score_T2)
        input ("press enter >")

        Game3_T() # Start the Game3_T



# Game2 for Rabbit: Rock-paper-scissors  
def Game2_R():
    printGraphic("Bear")
    print("While you're on your way, the bear silhouette looks blurry.")
    print("The bear is approaching you...")
    print("Let's play 'Rock Paper Scissors' to beat the bear.")
    # printGraphic("Bear")
    input("If you want to play the game, please press enter > ")
    play_R()

#Scissors=0, Rock=1, Paper=2    
possible_choices = ["Scissors", "Rock", "Paper"]
result_message = ["Tie","Win","Lose"]

#Scissors=0, Rock=1, Paper=2, Another input= -1
def get_user_choice_R():
    s = input("Rock Paper Scissors!: ")
    if s in possible_choices:
        return possible_choices.index(s)
        return -1

#Scissors=0, Rock=1, Paper=2        
def get_computer_choice():
    return random.randint(0, 2)  

#Tie=0, Win=1, Lose=2
def check_win_R(me : int, opponent : int) :
    if me == opponent:
        return 0
    elif (me + 1) % 3 == opponent:
        return 2 
    else :
        return 1

#Play Rock-paper-scissors        
def play_R():
    user = get_user_choice_R()
    if user == -1:
        print("Please write only Rock, Paper, Scissors.")
        return

    com = get_computer_choice()

    result = check_win_R(user, com)

    print(f'You : {possible_choices[user]} vs {possible_choices[com]} : com')
    print(result_message[result])
    print("You got a point!")
    if (result == 1):
        score_T2 = 0
        score_T2 += 3
        print(score_T2)
        input ("press enter >")

        Game3_R()

    elif (result == 2):
        score_T2 = 0
        score_T2 += 1
        print(score_T2)
        input ("press enter >")

        Game3_R() 

    else:
        score_T2 = 0
        score_T2 += 2
        print (score_T2)
        input ("press enter >")
        
        Game3_R() # Start the Game3_R

# Game1 for Turtle: choose one rock to jump over the river
def Game1_T():
    print("Tik-Tok. Tik-Tok. While you are on your way. ")
    print("You hear the sound of water flowing. ")

    input("press enter > ")

    printGraphic("RiverStones")
    print("There is a wide river that blocks your way.")
    print("Jump a rock to cross the river sounds a good idea.")
    
    input("press enter to jump > ")
    
    # Randomly choose a rock to jump, from 1 to 10 to see what happens.
    # If you choose wrong rock, you will fall down to the water.
    difficulty = 5
    jump = jumpRock(1, 10, difficulty)

    # You choose the right rock and only happen to the player.
    if (jump >= difficulty):
        print ("Oh! Lucky you! This rock is stable and you cross the river.")

        input("press enter >")

        Game2_T()

    else:
        Game1_T() # Try again



# Game1 for Rabbit: choose one rock to jump over the river
def Game1_R():
    print("Tik-Tok. Tik-Tok. While you are on your way. ")
    print("You hear the sound of water flowing. ")

    input("press enter > ")

    printGraphic("RiverStones")
    print("There is a wide river that blocks your way.")
    print("Jump a rock to cross the river sounds a good idea.")
    
    input("press enter to jump > ")
    
    # Randomly choose a rock to jump, from 1 to 10 to see what happens.
    # If you choose wrong rock, you will fall down to the water.
    difficulty = 5
    jump = jumpRock(1, 10, difficulty)

    # You choose the right rock and only happen to the player.
    if (jump >= difficulty):
        print ("Oh! Lucky you! This rock is stable and you cross the river.")
        input("press enter >")

        Game2_R()

    else:
        Game1_R() # Try again


# Choose a character
def character():
    print ("Before you start the game, you can choose a character.")
    print("Do you want to be a Turtle🐢 or a Rabbit🐇?")
    
    pcmd = input ("Please choose Turtle or Rabbit: ")

    # the player can choose turtle or rabbit
    if (pcmd == "Turtle"):
        print ("Got it! Turtle, " + player["name"] + " Let's go for the flag!")
        printGraphic("Turtle")
        input("Press enter >")
        Game1_T() # Start the Game1_T

    else:
        print ("Got it! Rabbit, " + player["name"] + " Let's go for the flag!")
        printGraphic("Rabbit")
        input("Press enter >")
        Game1_R() # Start the Game1_R



# Story    
def introStory():
    # Start
    print ("Hello there! Before we start to talk, what should I call you?")
    player["name"] = input("Please enter your name > ")

    # Intro story
    print (player["name"] + "!" + " Do you know the story of 'The Tortoise and the Hare', right?")
    print ("But...")
    print ("Did the turtle really win the race against the rabbit?")
    print ("Aren't you curious?")
    print ("Do you want to find out with me?")

    pcmd = input("Please choose yes or no > ")

    # A player can choose yes or no
    if (pcmd == "yes"):
        print ("Cool. " + player["name"] + "!" + " You know the rules, right? You have to run hard to the flag.")
        input("Press enter > ")
        character()
    else:
        print ("No?... Aren't you curious? Really?")
        pcmd = input("Please choose yes or no > ")
        character() # Repeat over and over until the player chooses yes



# Main
def main():
    printGraphic("Storytitle") # Call the function to print an image
    introStory() # Start the intro

main()
